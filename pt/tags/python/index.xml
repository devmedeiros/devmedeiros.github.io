<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>python on devmedeiros</title>
    <link>https://devmedeiros.com/pt/tags/python/</link>
    <description>Recent content in python on devmedeiros</description>
    <image>
      <title>devmedeiros</title>
      <url>https://devmedeiros.com/cover.png</url>
      <link>https://devmedeiros.com/cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 31 May 2023 21:54:00 -0300</lastBuildDate><atom:link href="https://devmedeiros.com/pt/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Como Usar o Banco SQLite com o Github Actions</title>
      <link>https://devmedeiros.com/pt/post/sqlite-database-github-actions/</link>
      <pubDate>Wed, 31 May 2023 21:54:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/sqlite-database-github-actions/</guid>
      <description>Descubra uma alternativa de graça a computação em nuvem para data scraping com GitHub Actions!</description>
      <content:encoded><![CDATA[<p>Recentemente eu venho trabalhando com um projeto de raspagem de dados (web scrapping) que trabalha com uma pequena quantidade de dados, tão pequena que eu poderia usar tranquilamente os recursos gratuitos dos serviços de cloud disponíveis, mas eu não gosto de correr o risco de ser cobrada por um projeto pessoal. Para resolver isso eu estive procurando uma alternativa gratuita em que eu também possa compartilhar os dados e que rode com o Github Actions.</p>
<p>Caso queira checar o repositório que contém o código discutido neste post, siga este <a href="https://github.com/devmedeiros/template-sqlite-actions">link</a>.</p>
<blockquote>
<p>Eu vou ilustrar como integrar o banco de dados SQLite com o Github Actions usando Python, mas caso você saiba como modificar um arquivo usando outra linguagem de programação esse post ainda é relevante para você.</p>
</blockquote>
<h2 id="escrevendo-seu-gerador-de-dadosscrapper">Escrevendo seu Gerador de Dados/Scrapper</h2>
<p>Primeiro, seu projeto precisa estar em um repositório, no meu caso estou usando o Github. Eu escrevi um código Python que faz uma raspagem de dados numa página web e salva esses dados num banco SQLite, nesse exemplo vou ilustrar isso com um código mais simples.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Importe as bibliotecas</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> pandas <span style="color:#66d9ef">as</span> pd
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> random
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> sqlalchemy <span style="color:#f92672">import</span> create_engine
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> datetime <span style="color:#f92672">import</span> datetime
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Crie os dados aleatórios</span>
</span></span><span style="display:flex;"><span>people <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Ana&#39;</span>, <span style="color:#e6db74">&#39;Bob&#39;</span>, <span style="color:#e6db74">&#39;Charles&#39;</span>, <span style="color:#e6db74">&#39;Daiana&#39;</span>]
</span></span><span style="display:flex;"><span>values <span style="color:#f92672">=</span> [random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random()]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Crie uma conexão com o banco de dados</span>
</span></span><span style="display:flex;"><span>engine <span style="color:#f92672">=</span> create_engine(<span style="color:#e6db74">&#39;sqlite:///data.db&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Crie o data frame</span>
</span></span><span style="display:flex;"><span>data <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>DataFrame({<span style="color:#e6db74">&#39;people&#39;</span>: people, <span style="color:#e6db74">&#39;values&#39;</span>: values, <span style="color:#e6db74">&#39;load_date&#39;</span>: datetime<span style="color:#f92672">.</span>now()})
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Salve o data frame</span>
</span></span><span style="display:flex;"><span>data<span style="color:#f92672">.</span>to_sql(<span style="color:#e6db74">&#39;data&#39;</span>, if_exists<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;append&#39;</span>, con<span style="color:#f92672">=</span>engine, index<span style="color:#f92672">=</span><span style="color:#66d9ef">False</span>)
</span></span></code></pre></div><h2 id="configurando-o-workflow">Configurando o Workflow</h2>
<p>Se você rodar o código acima diversas vezes numa máquina local ele irá funcionar, mas você irá notar que no Github ele não irá persistir as mudanças, isso é porque é necessário fazer um commit. Para fazer isso você precisará criar um workflow, no seu repositório crie um arquivo yaml na pasta <code>.github/workflow</code>. Esse arquivo será o seu workflow, você pode escolher qualquer nome que quiser.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#75715e"># dê um nome para o workflow</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">name</span>: <span style="color:#ae81ff">random data</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># defina a frequência que ele irá rodar</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">on</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">schedule</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">cron</span>: <span style="color:#e6db74">&#34;0 * * * *&#34;</span> <span style="color:#75715e"># a cada hora</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">workflow_dispatch</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">env</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">ACTIONS_ALLOW_UNSECURE_COMMANDS</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># crie as tarefas/jobs</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">jobs</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">generate-latest</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">runs-on</span>: <span style="color:#ae81ff">ubuntu-latest</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">steps</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Checkout repo</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/checkout@v3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Set up Python</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/setup-python@v4</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">python-version</span>: <span style="color:#e6db74">&#39;3.10&#39;</span> <span style="color:#75715e"># fixa o python para a versão 3.10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Install requirements</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">pip3 install -r requirements.txt</span> <span style="color:#75715e"># configura o ambiente</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Run random data</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">python main.py</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Commit changes</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: |<span style="color:#e6db74">
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git config --global user.name &#34;github-actions&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git config --global user.email &#34;action@github.com&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git add -A
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git commit -m &#34;add more data&#34;</span>          
</span></span><span style="display:flex;"><span>      
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Push changes</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">ad-m/github-push-action@master</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">github_token</span>: <span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}</span>
</span></span></code></pre></div><p>Não se esqueça de habilitar as permissões do seu workflow, no seu repositório navegue até <code>Settings &gt; Actions &gt; General</code>, e selecione <strong>Read and write permissions</strong>.</p>
<p><img loading="lazy" src="https://i.imgur.com/pOym60i.png#center" alt="worflow permissions do site oficial do github"  />
</p>
<h2 id="conclusão">Conclusão</h2>
<p>Essa pode ser uma boa alternativa gratuita caso você queira ser capaz de compartilhar os dados que você está coletando ou gerando. Mas não se esqueça de ficar atento nas limitações do Github quando usando a versão free. Veja os limites de uso atuais no <a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#usage-limits">site oficial</a> deles.</p>
<hr>
<p>Caso queira ver uma aplicação real do que foi discutido aqui, você pode checar esse <a href="https://github.com/devmedeiros/nota-fiscal-goiana">respositório</a>. Onde eu implementei um scrapper mensal que coleta os dados e os disponibiliza num banco SQLite para todos.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Estudo de Caso Analytics Engineer</title>
      <link>https://devmedeiros.com/pt/post/case-study-analytics-engineer/</link>
      <pubDate>Tue, 23 Aug 2022 22:57:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/case-study-analytics-engineer/</guid>
      <description>Projeto explorando tarefas comuns que um Analytics Engineer faz diariamente.</description>
      <content:encoded><![CDATA[<h2 id="como-é-trabalhar-como-um-analytics-engineer">Como é trabalhar como um Analytics Engineer?</h2>
<p>Analytics Engineer refere-se a um profissional de ciência de dados focado em transformar dados em informações de fácil acesso ao usuário final. Eles fornecem relatórios estatísticos e dinâmicos que capacitam a equipe de negócios sem que eles precisem pensar na complexidade por trás da análise de dados.</p>
<p>Neste estudo de caso, quero falar sobre quais seriam as tarefas comuns que um Analytics Engineer precisaria executar e como eu as conduziria.</p>
<p>Nesse cenário, o Analytics Engineer trabalha para o Bankio, um banco digital do Brasil. Como a maioria dos bancos digitais no Brasil, o Bankio oferece transferências gratuitas para todas as contas bancárias do país. Também possui muitos produtos como conta de investimento, conta poupança, conta bancária individual, cartão de crédito sem anuidade e muito mais.</p>
<h3 id="tarefa-1-consulta-sql">Tarefa 1: Consulta SQL</h3>
<blockquote>
<p>Um Analista de Negócios (<em>Bussiness Analyst</em>) do Bankio pede sua ajuda para escrever uma consulta SQL para obter todo o saldo mensal da conta entre janeiro de 2020 e dezembro de 2020.</p>
</blockquote>


<p><details >
  <summary markdown="span">Solução da consulta SQL <em>(clique para expandir)</em></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-SQL" data-lang="SQL"><span style="display:flex;"><span><span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>  a.<span style="color:#f92672">*</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#75715e">-- Aqui eu calculo a soma cumulativa do total de depósitos de cada cliente ordenando
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  <span style="color:#75715e">-- por mês, se for nulo, altero o valor para 0, então subtraio a soma cumulativa do
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  <span style="color:#75715e">-- total de retiradas para cada cliente ordenando por mês, se for nulo, altero o
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  <span style="color:#75715e">-- valor para 0 e eu salvo isso como account_monthly_balance
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  NVL(<span style="color:#66d9ef">SUM</span>(total_transfer_in) OVER (PARTITION <span style="color:#66d9ef">BY</span> customer_id 
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">ORDER</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>  action_month), <span style="color:#ae81ff">0</span>) <span style="color:#f92672">-</span> NVL(<span style="color:#66d9ef">SUM</span>(total_transfer_out) OVER (PARTITION <span style="color:#66d9ef">BY</span> customer_id 
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">ORDER</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>  action_month), <span style="color:#ae81ff">0</span>) <span style="color:#66d9ef">AS</span> account_monthly_balance 
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>  <span style="color:#75715e">-- subconsulta total de transações de entrada/saída
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">*</span> 
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">-- subconsulta de depósitos totais
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>      action_month, customer_id, <span style="color:#66d9ef">SUM</span>(amount) <span style="color:#66d9ef">AS</span> total_transfer_in 
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>      (
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">*</span> 
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>          <span style="color:#75715e">-- subconsulta de depósitos regulares
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>            d_month.action_month, accounts.customer_id, <span style="color:#66d9ef">SUM</span>(transfer_ins.amount) <span style="color:#66d9ef">AS</span> amount 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>            d_time 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">INNER</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>              transfer_ins 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">ON</span> transfer_ins.transaction_completed_at <span style="color:#f92672">=</span> d_time.time_id 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>              d_month <span style="color:#66d9ef">USING</span>(month_id) 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>              accounts <span style="color:#66d9ef">USING</span>(account_id) 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">WHERE</span>
</span></span><span style="display:flex;"><span>            transfer_ins.status <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;completed&#39;</span> 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>            d_month.action_month, accounts.customer_id ) transfer_in 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">UNION</span> <span style="color:#66d9ef">ALL</span>
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>            <span style="color:#f92672">*</span> 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>            <span style="color:#75715e">-- subconsulta de depósitos pix
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>              d_month.action_month, accounts.customer_id, <span style="color:#66d9ef">SUM</span>(pix_movements.pix_amount) <span style="color:#66d9ef">AS</span> amount 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>              d_time 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">INNER</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                pix_movements 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">ON</span> pix_movements.pix_completed_at <span style="color:#f92672">=</span> d_time.time_id 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                d_month <span style="color:#66d9ef">USING</span>(month_id) 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                accounts <span style="color:#66d9ef">USING</span>(account_id) 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">WHERE</span>
</span></span><span style="display:flex;"><span>              pix_movements.status <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;completed&#39;</span> 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">AND</span> pix_movements.in_or_out <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;pix_in&#39;</span> 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>              d_month.action_month, accounts.customer_id ) 
</span></span><span style="display:flex;"><span>      )
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>      action_month, customer_id ) 
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">FULL</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>        (
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>            action_month,
</span></span><span style="display:flex;"><span>            customer_id,
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">SUM</span>(amount) <span style="color:#66d9ef">AS</span> total_transfer_out 
</span></span><span style="display:flex;"><span>          <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>            <span style="color:#75715e">-- subconsulta de saques totais
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>              <span style="color:#f92672">*</span> 
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>              <span style="color:#75715e">-- subconsulta de retirada regular
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>                d_month.action_month, accounts.customer_id, <span style="color:#66d9ef">SUM</span>(transfer_outs.amount) <span style="color:#66d9ef">AS</span> amount 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>                d_time 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">INNER</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                  transfer_outs 
</span></span><span style="display:flex;"><span>                  <span style="color:#66d9ef">ON</span> transfer_outs.transaction_completed_at <span style="color:#f92672">=</span> d_time.time_id 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                  d_month <span style="color:#66d9ef">USING</span>(month_id) 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                  accounts <span style="color:#66d9ef">USING</span>(account_id) 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">WHERE</span>
</span></span><span style="display:flex;"><span>                transfer_outs.status <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;completed&#39;</span> 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>                d_month.action_month, accounts.customer_id ) 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">UNION</span> <span style="color:#66d9ef">ALL</span>
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>                <span style="color:#f92672">*</span> 
</span></span><span style="display:flex;"><span>              <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>                <span style="color:#75715e">-- subconsulta de retirada de pix
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>( 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">SELECT</span>
</span></span><span style="display:flex;"><span>                  d_month.action_month, accounts.customer_id, <span style="color:#66d9ef">SUM</span>(pix_movements.pix_amount) <span style="color:#66d9ef">AS</span> amount 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">FROM</span>
</span></span><span style="display:flex;"><span>                  d_time 
</span></span><span style="display:flex;"><span>                  <span style="color:#66d9ef">INNER</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                    pix_movements 
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">ON</span> pix_movements.pix_completed_at <span style="color:#f92672">=</span> d_time.time_id 
</span></span><span style="display:flex;"><span>                  <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                    d_month <span style="color:#66d9ef">USING</span>(month_id) 
</span></span><span style="display:flex;"><span>                  <span style="color:#66d9ef">LEFT</span> <span style="color:#66d9ef">JOIN</span>
</span></span><span style="display:flex;"><span>                    accounts <span style="color:#66d9ef">USING</span>(account_id) 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">WHERE</span>
</span></span><span style="display:flex;"><span>                  pix_movements.status <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;completed&#39;</span> 
</span></span><span style="display:flex;"><span>                  <span style="color:#66d9ef">AND</span> pix_movements.in_or_out <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;pix_out&#39;</span> 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>                  d_month.action_month, accounts.customer_id ) ) 
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">GROUP</span> <span style="color:#66d9ef">BY</span>
</span></span><span style="display:flex;"><span>                  action_month,
</span></span><span style="display:flex;"><span>                  customer_id 
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">USING</span> (action_month, customer_id) ) a;
</span></span></code></pre></div>
</details></p>

<h3 id="tarefa-2-indicadores-chaves-de-performance-kpi">Tarefa 2: Indicadores Chaves de Performance (KPI)</h3>
<figure>
    <img loading="lazy" src="https://images.unsplash.com/photo-1526628953301-3e589a6a8b74"
         alt="tela do computador com 8 retângulos preenchidos com indicadores-chave"/> <figcaption>
            <p>Foto de Stephen Dawson de Unsplash</p>
        </figcaption>
</figure>

<blockquote>
<p>Outro colega do Bankio está interessado em analisar o sucesso do produto <a href="#pix">PIX</a> da empresa em nível comercial e técnico. Então eles pediram que você apresentasse alguns indicadores-chave para medir isso.</p>
</blockquote>


<p><details >
  <summary markdown="span">Tempo médio de processamento das transações PIX <em>(clique para expandir)</em></summary>
  Isso pode ser obtido usando o tempo que um cliente solicita uma transação PIX e quando ela é concluída, calculamos isso para todas as transações PIX e, em seguida, fazemos a média. O PIX deve ser instantâneo, portanto, essa métrica deve ser a menor possível.
</details></p>



<p><details >
  <summary markdown="span">A proporção de falhas do PIX <em>(clique para expandir)</em></summary>
  Este indicador é importante porque é inconveniente para o cliente que sua transação falhe. Podemos calcular isso dividindo a soma das transações PIX com falha pelo total de transações PIX. Esta medida deve ser minimizada.
</details></p>



<p><details >
  <summary markdown="span">A proporção de transações usando PIX <em>(clique para expandir)</em></summary>
  <p>O sucesso do PIX pode ser medido pela proporção de movimentações usando PIX sobre transações normais. Então, basta contar quantas transações foram concluídas usando o PIX e dividir pelo valor total de transações concluídas. Um valor maior reflete o sucesso do PIX sobre transações regulares.</p>
<p>Alternativamente, em vez de apenas contar as transações, podemos avaliar quanto dinheiro cada tipo de transação está movimentando.</p>

</details></p>



<p><details >
  <summary markdown="span">A proporção de entrada/saída do PIX <em>(clique para expandir)</em></summary>
  <p>Essa medida é boa para analisar se os clientes estão usando seu PIX mais para receber dinheiro ou para enviar dinheiro. Seria melhor se mais clientes estivessem recebendo mais dinheiro do que enviando. Como o Bankio já tinha transações gratuitas para qualquer banco, antes do PIX aparecer, outros ainda tinham que pagar taxas para enviar dinheiro para sua conta do Bankio. Por esse motivo, é melhor contar quantas transações estão chegando pelo PIX e dividi-las por todas as transações PIX. Quanto mais alto melhor.</p>
<p>Nesse caso, também podemos somar o saldo de depósitos e saques da conta do Bankio usando o PIX e compará-lo com transações regulares.</p>

</details></p>

<h3 id="tarefa-3-retorno-diário-do-investimento">Tarefa 3: Retorno Diário do Investimento</h3>
<blockquote>
<p>O Bankio tem uma conta bancária em que o cliente pode investir num produto de rendimento fixo. Considere que este produto oferece aos clientes um retorno diário de 0,01% de acordo com o valor do saldo diário investido. Calcule quanto cada cliente tem em sua conta bankio durante o ano de 2020.</p>
</blockquote>
<p>Este retorno é calculado diariamente após todos os saques e/ou depósitos feitos em um determinado dia. E todos os dias, mesmo finais de semana, geram algum retorno.</p>
<p>O exemplo a seguir descreve o cliente A que começa a investir nesse produto de renda fixa no dia 16 do primeiro mês. O saldo anterior era zero, pois esse consumidor está fazendo um primeiro depósito no investimento. Seu depósito inicial foi de 1.000 e, no final do dia, produziu a uma taxa de renda diária de 0,01% de seu saldo. O mesmo produto continua sendo consumido por esse cliente em momentos diferentes ao longo do mês. Lembre-se que esta é apenas uma amostra fictícia do log de transações com cálculos diários aplicados. Observe que a receita desse dia deve ser zerada no caso de Movimentos negativos.</p>
<table>
<thead>
<tr>
<th>Dia</th>
<th>Mês</th>
<th>ID Conta</th>
<th>Depósito</th>
<th>Retirada</th>
<th>Renda no final do Dia</th>
<th>Rendimento Diário da Conta</th>
</tr>
</thead>
<tbody>
<tr>
<td>16</td>
<td>1</td>
<td>A</td>
<td>1000</td>
<td>0</td>
<td>0,1</td>
<td>1000,10</td>
</tr>
<tr>
<td>20</td>
<td>1</td>
<td>A</td>
<td>500</td>
<td>0</td>
<td>0,15</td>
<td>1500,55</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td>A</td>
<td>0</td>
<td>200</td>
<td>0,13</td>
<td>1302,48</td>
</tr>
<tr>
<td>19</td>
<td>2</td>
<td>A</td>
<td>1000</td>
<td>200</td>
<td>0,21</td>
<td>2104,78</td>
</tr>
</tbody>
</table>
<p><em>Movimentos = Saldo do dia anterior + Depósito - Retirada</em></p>
<p><em>Renda no final do dia = Movimentos * Taxa de Renda</em></p>
<p><em>Saldo Diário da Conta = Movimentos + Renda no Fim do Dia</em></p>
<script type="application/javascript" src="https://gist.github.com/devmedeiros/2a52cf2c4431a1993a98bf7f36d0f412.js?file=bankio-task-3-pt.ipynb"></script>

<hr>
<h2 id="glossário">Glossário</h2>
<h4 id="saldo-mensal-da-conta">Saldo Mensal da Conta</h4>
<p>É a quantidade de dinheiro que um cliente tinha em sua conta no final de um determinado mês.</p>
<h4 id="informações-da-conta-agência-número-da-conta-e-dígito-de-verificação">Informações da conta (agência, número da conta e dígito de verificação)</h4>
<p>No Brasil, uma conta bancária pode ser identificada exclusivamente por três números. O código <strong>agência</strong>, que indica em qual agência bancária as contas foram abertas, vem primeiro. O segundo é o <strong>número da conta</strong> que uma agência usa para identificar contas. O <strong>dígito de verificação</strong>, que é usado apenas para detecção de erros, é o último.</p>
<h4 id="cpf">CPF</h4>
<p>É a identificação cadastral do contribuinte individual brasileiro.</p>
<h4 id="pix">PIX</h4>
<p>No Brasil, este é o método mais recente de transferência de dinheiro. Não é pago. É imediato, e tudo o que é necessário para concluir uma transação é a chave PIX associada à conta.</p>
<h4 id="transferências-não-pix">Transferências não PIX</h4>
<p>Estes são os métodos convencionais para transferir dinheiro entre contas bancárias. Esse tipo de transação exige que sejam fornecidos o CPF, o código da agência, o número da conta e o dígito verificador da conta que receberá os recursos. A maioria dos bancos cobra uma taxa nessas transações, e a confirmação da transação normalmente leva várias horas a dias.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Aplicativo de Classificação de Score de Crédito</title>
      <link>https://devmedeiros.com/pt/post/credit-score-classification-app/</link>
      <pubDate>Mon, 08 Aug 2022 17:17:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/credit-score-classification-app/</guid>
      <description>Usando o Streamlit para fazer um aplicativo da web que classifica sua pontuação de crédito usando Python</description>
      <content:encoded><![CDATA[<h2 id="visão-geral-do-projeto">Visão Geral do Projeto</h2>
<p>Este projeto mostra um ciclo de vida de ciência de dados, onde eu limpo e preparo o banco de dados, <em>feature engineering</em>, aprendizado de máquina, <em>deploy</em> e visualização de dados.</p>
<p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/data-science-cycle_QZwyHaXsP.png?ik-sdk-version=javascript-1.4.3&amp;updatedAt=1659975338736#center" alt="ciclo de ciência de dados deste projeto em um diagrama"  />
</p>
<p>O conjunto de dados vem do <a href="https://www.kaggle.com/datasets/parisrohan/credit-score-classification?select=train.csv">kaggle</a>, e possui muitas informações sobre o crédito e os dados bancários de uma pessoa, mas ele também tem muitos erros de digitação, dados ausentes e dados censurados. Este conjunto de dados precisava ser limpo e também precisava de <em>feature engineering</em>, eu precisava alterar algumas <em>features</em>, para que pudessem ser lidos pelo modelo. Assim, quando apresentada com dados categóricos, eu precisava identificar se era ordinal ou nominal, se fosse uma variável ordinal, seria mapeada para números sequenciais, caso contrário, eu faria uma <em>dummy</em>. Para as variáveis ​​_sim_ e <em>não</em> eu escolhi fazer apenas uma <em>dummy</em>, mas para os tipos de empréstimos fiz uma <em>dummy</em> para cada tipo de empréstimo e se alguém não tiver um empréstimo, simplesmente obtém 0 em todos as <em>features</em> de tipo de empréstimo. Eu falo sobre o processo de limpeza e <em>feature engeeniring</em> neste conjunto de dados <a href="/pt/post/data-cleaning-credit-score/">aqui</a>.</p>
<p>Então eu precisava de um modelo de ML que pudesse prever o score de crédito de uma pessoa com base em algumas <em>features</em>. Para decidir quais <em>features</em> eu iria usar eu analisei quais variáveis são usadas em empresas reais, e eu também escolhi variáveis que eu achei que faziam sentido. Eu acabei escolhendo as seguintes variáveis:</p>
<ul>
<li>Idade</li>
<li>Renda anual</li>
<li>Quantidade de contas bancárias</li>
<li>Quantidade de cartões de crédito</li>
<li>Quantidade de pagamentos atrasados</li>
<li>Proporção de uso do cartão de crédito</li>
<li>Quantidade de pagamento de empréstimos</li>
<li>Idade do histórico de crédito em meses</li>
<li>Empréstimos</li>
<li>Perdeu algum pagamento nos últimos 12 meses</li>
<li>Pagou o valor mínimo em pelo menos um cartão de crédito</li>
</ul>
<p>Com as <em>features</em> prontas, eu comecei a trabalhar no modelo, por enquanto eu decidi usar um modelo simples de Floresta Aleatória (Random Forest), eu pretendo melhorar esse modelo, mas nesse primeiro momento eu foquei eu fazer o app do streamlit.</p>
<p>Depois que terminei o modelo eu serializei ele e o <em>scaler</em> usando o pacote <code>pickle</code>. Para fazer o <em>deploy</em> do modelo e construir a visualização, usei o <a href="https://streamlit.io/">streamlit</a>.</p>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/33239902/183321842-be97fb04-f00b-4b62-8e6e-2b53d25335a0.gif" alt="um gif mostrando como funciona o aplicativo de score de crédito streamlit"  />
</p>
<p>Neste aplicativo, você pode preencher um formulário ou apenas selecionar um dos três perfis padrão fornecidos para ver como o modelo avalia a pontuação de crédito de cada pessoa. Ele também apresenta &ldquo;a certeza&rdquo; do modelo exibindo um gráfico de pizza com a probabilidade (em porcentagem) de cada grupo de score de crédito em que as respostas se encaixam. Ele também mostra o quanto cada recurso conta para sua pontuação de crédito, de acordo com esse modelo. Você pode ver o aplicativo ao vivo <a href="https://devmedeiros-credit-score-classification-appstreamlit-app-fcakrl.streamlitapp.com/">aqui</a>.</p>
<hr>
<p>Todo o código está disponível no meu <a href="https://github.com/devmedeiros/credit-score-classification-app">repositório</a> do GitHub. Além do código, lá você encontra a documentação, os dados originais e tratados (todas as etapas do tratamento), todos os requisitos para a construção deste projeto e como executá-lo localmente.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Limpando Base de Dados para Classificação de Score de Crédito</title>
      <link>https://devmedeiros.com/pt/post/data-cleaning-credit-score/</link>
      <pubDate>Sun, 24 Jul 2022 13:06:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/data-cleaning-credit-score/</guid>
      <description>Como surgir com formas de limpar um banco de dados usando Python</description>
      <content:encoded><![CDATA[<blockquote>
<p><strong>Aviso:</strong> Eu estarei falando sobre como chegar no código python, caso queira ler o código em si, dirija-se a este <a href="https://github.com/devmedeiros/credit-score-classification-app/tree/main/notebooks">repositório</a>.</p>
</blockquote>
<h2 id="conheça-a-base-para-classificação-de-score-de-crédito">Conheça a Base para Classificação de Score de Crédito</h2>
<p>A base de dados que vamos limpar vem do <a href="https://www.kaggle.com/datasets/parisrohan/credit-score-classification?select=train.csv">kaggle</a>, a qual está no arquivo <code>train.csv</code>, mas os passos que iremos falar também podem ser usados para <code>test.csv</code>.</p>
<p>Há 28 colunas e 100 mil linhas neste banco de dados. Eu compilei uma descrição das variáveis na tabela a seguir.</p>
<table>
<thead>
<tr>
<th>Variável</th>
<th>Descrição</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ID</code></td>
<td>Representa uma identificação única de uma entrada</td>
</tr>
<tr>
<td><code>Customer_ID</code></td>
<td>Representa uma identificação única de uma pessoa</td>
</tr>
<tr>
<td><code>Month</code></td>
<td>Representa o mês do ano</td>
</tr>
<tr>
<td><code>Name</code></td>
<td>Representa o nome de uma pessoa</td>
</tr>
<tr>
<td><code>Age</code></td>
<td>Representa a idade de uma pessoa</td>
</tr>
<tr>
<td><code>SSN</code></td>
<td>Representa o número social de uma pessoa americana</td>
</tr>
<tr>
<td><code>Occupation</code></td>
<td>Representa a profissão de uma pessoa</td>
</tr>
<tr>
<td><code>Annual_Income</code></td>
<td>Representa o salário anual de uma pessoa</td>
</tr>
<tr>
<td><code>Monthly_Inhand_Salary</code></td>
<td>Representa o salário mensal base de uma pessoa</td>
</tr>
<tr>
<td><code>Num_Bank_Accounts</code></td>
<td>Representa quantas contas bancárias uma pessoa possui</td>
</tr>
<tr>
<td><code>Num_Credit_Card</code></td>
<td>Representa o número de cartões de crédito que uma pessoa possui</td>
</tr>
<tr>
<td><code>Interest_Rate</code></td>
<td>Representa a taxa de juros de um cartão de crédito</td>
</tr>
<tr>
<td><code>Num_of_Loan</code></td>
<td>Representa quantos empréstimos uma pessoa fez com o banco</td>
</tr>
<tr>
<td><code>Type_of_Loan</code></td>
<td>Representa os tipos de empréstimos feitos por uma pessoa</td>
</tr>
<tr>
<td><code>Delay_from_due_date</code></td>
<td>Representa o numero médio de dias atrasados da data de pagamento</td>
</tr>
<tr>
<td><code>Num_of_Delayed_Payment</code></td>
<td>Representa o numério médio de pagamentos atrasados feitos por uma pessoa</td>
</tr>
<tr>
<td><code>Changed_Credit_Limit</code></td>
<td>Representa, em porcentagem, a mudança de limite do cartão de crédito</td>
</tr>
<tr>
<td><code>Num_Credit_Inquiries</code></td>
<td>Representa o número de consultas de cartão de crédito</td>
</tr>
<tr>
<td><code>Credit_Mix</code></td>
<td>Representa a classificação da mistura de créditos</td>
</tr>
<tr>
<td><code>Outstanding_Debt</code></td>
<td>Representa a quantidade de saldo devedor a ser pago em dólares americanos</td>
</tr>
<tr>
<td><code>Credit_Utilization_Ratio</code></td>
<td>Representa a proporção de utilização de cartões de crédito</td>
</tr>
<tr>
<td><code>Credit_History_Age</code></td>
<td>Representa a idade do histórico de uso de crédito de uma pessoa</td>
</tr>
<tr>
<td><code>Payment_of_Min_Amount</code></td>
<td>Representa se uma pessoa pagou apenas o mínimo</td>
</tr>
<tr>
<td><code>Total_EMI_per_month</code></td>
<td>Representa os pagamentos das parcelas mensais de empréstimos em dólares americanos</td>
</tr>
<tr>
<td><code>Amount_invested_monthly</code></td>
<td>Representa a quantidade de dinheiro investido pelo cliente em dólares americanos</td>
</tr>
<tr>
<td><code>Payment_Behaviour</code></td>
<td>Representa o comportamento de pagamento do cliente em dólares americanos</td>
</tr>
<tr>
<td><code>Monthly_Balance</code></td>
<td>Representa o extrato mensal do cliente em dólares americanos</td>
</tr>
<tr>
<td><code>Credit_Score</code></td>
<td>Representa as faixas de score de crédito (Baixo, Médio, Bom)</td>
</tr>
</tbody>
</table>
<p>Mesmo tendo 100 mil linhas, dentro dessas linhas existem apenas 12.500 clientes diferentes, cada cliente aparece 8 vezes (de Janeiro a Agosto). Então basicamente nós podemos selecionar um cliente específico e olhar as informações dele e facilmente identificar dados incorretos e somos capazes de ajustá-los.</p>
<h2 id="lidando-com-erros-de-digitação-e-outliers">Lidando com Erros de Digitação e Outliers</h2>
<p>Neste banco de dados há diversos erros de digitação ou simplesmente coisas que não fazem sentido. Você irá encontrar valores que são: <code>_</code>, <code>!@9#%8</code>, <code>__10000__</code>, <code>NM</code> ou <code>_______</code>. Eu acredito que esses erros estão na base para representar o caos que você pode encontrar quando estiver lidando com dados reais e a maioria deles significam que esse valor é nulo.</p>
<p>Por um momento eu pensei que <code>__10000__</code> poderia ser apenas um erro de digitação, mas não há nenhuma quantidade de dinheiro investida mensalmente que é superior a 200 dólares americanos.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>__10000__             4305
</span></span><span style="display:flex;"><span>0.0                    169
</span></span><span style="display:flex;"><span>80.41529543900253        1
</span></span><span style="display:flex;"><span>36.66235139442514        1
</span></span><span style="display:flex;"><span>89.7384893604547         1
</span></span><span style="display:flex;"><span>                      ... 
</span></span><span style="display:flex;"><span>36.541908593249026       1
</span></span><span style="display:flex;"><span>93.45116318631192        1
</span></span><span style="display:flex;"><span>140.80972223052834       1
</span></span><span style="display:flex;"><span>38.73937670100975        1
</span></span><span style="display:flex;"><span>167.1638651610451        1
</span></span><span style="display:flex;"><span>Name: Amount_invested_monthly, Length: 91049, dtype: int64
</span></span></code></pre></div><p>Seguindo essa lógica, eu procurei por mais coisas que não faziam sentido no data frame e comecei a substituir esses valores pelos <code>nan</code>s do numpy. Eu também procurei por outliers olhando a distribuição dos valores, se havia um valor que aparecia apenas uma vez e ele estava isolado, eu o substituia por um valor nulo. Eu não baseiei essa decisão apenas nisso, eu também procurei por clientes que tinham esse outlier e observei todos os dados desse cliente específico, e eu sempre encontrava coisas estranhas como:</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/credit-score-classification-app/main/reports/figures/annual_income.png#center" alt="uma tabela mostrando informação sobre um cliente específico e mostrando um outlier na sua receita anual"  />
</p>
<p>Olhando para este cliente em específico é fácil ver que ele não ganhou todo esse dinheiro anualmente apenas um mês do ano.</p>
<p>Ao terminar essa busca por erros de digitação e outliers, não esqueça de passar o novo tipo de dados para suas variáveis. Algumas variáveis como <code>age</code> começaram com caracteres string entre as idades e por isso ao ser feito a leitura dos dados o pandas os reconheceu como objeto e não como tipo int ou float.</p>
<h2 id="preenchendo-valores-em-branco">Preenchendo Valores em Branco</h2>
<p>Depois de lidar com todos os outliers e erros de digitação, nós terminamos com diversos valores nulos, como pode ser visto a baixo:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>df<span style="color:#f92672">.</span>isna()<span style="color:#f92672">.</span>sum()[df<span style="color:#f92672">.</span>isna()<span style="color:#f92672">.</span>sum() <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>]
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>Age                         2776
</span></span><span style="display:flex;"><span>Occupation                  7062
</span></span><span style="display:flex;"><span>Annual_Income                993
</span></span><span style="display:flex;"><span>Monthly_Inhand_Salary      15002
</span></span><span style="display:flex;"><span>Num_Credit_Card             2271
</span></span><span style="display:flex;"><span>Interest_Rate               2034
</span></span><span style="display:flex;"><span>Num_of_Loan                 4348
</span></span><span style="display:flex;"><span>Type_of_Loan               11408
</span></span><span style="display:flex;"><span>Num_of_Delayed_Payment      7002
</span></span><span style="display:flex;"><span>Changed_Credit_Limit        2091
</span></span><span style="display:flex;"><span>Num_Credit_Inquiries        1965
</span></span><span style="display:flex;"><span>Credit_Mix                 20195
</span></span><span style="display:flex;"><span>Credit_History_Age          9030
</span></span><span style="display:flex;"><span>Payment_of_Min_Amount      12007
</span></span><span style="display:flex;"><span>Amount_invested_monthly     8784
</span></span><span style="display:flex;"><span>Payment_Behaviour           7600
</span></span><span style="display:flex;"><span>Monthly_Balance             1200
</span></span><span style="display:flex;"><span>dtype: int64
</span></span></code></pre></div><p>Ao invés de apagar todos os valores em branco eu primeiro tento preencher eles usando informação que já temos disponível. Lembra que eu mencionei que um cliente possui dados históricos de 8 meses atrás? Nós podemos apenas usar esses dados históricos para preencher os valores nulos usando uma medida resumo da nossa escolha filtrando para o cliente, isso será mais preciso do que apenas calcular a média do nosso banco de dados.</p>
<p>Eu decidir usar o valor médio para as seguintes colunas:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>mean_columns <span style="color:#f92672">=</span> [
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Num_of_Delayed_Payment&#39;</span>, <span style="color:#e6db74">&#39;Changed_Credit_Limit&#39;</span>, <span style="color:#e6db74">&#39;Num_Credit_Inquiries&#39;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Amount_invested_monthly&#39;</span>, <span style="color:#e6db74">&#39;Monthly_Balance&#39;</span>, <span style="color:#e6db74">&#39;Num_of_Loan&#39;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#39;Num_Credit_Card&#39;</span>, <span style="color:#e6db74">&#39;Interest_Rate&#39;</span>, <span style="color:#e6db74">&#39;Annual_Income&#39;</span>, <span style="color:#e6db74">&#39;Monthly_Inhand_Salary&#39;</span>
</span></span><span style="display:flex;"><span>    ]
</span></span></code></pre></div><p>E o último valor não nulo para estas:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>last_columns <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Age&#39;</span>, <span style="color:#e6db74">&#39;Occupation&#39;</span>, <span style="color:#e6db74">&#39;Type_of_Loan&#39;</span>, <span style="color:#e6db74">&#39;Credit_Mix&#39;</span>]
</span></span></code></pre></div><p>O motivo de não usar a média para todos os meus valores é porque eu não queria ter que lidar com uma pessoa tendo 20,5 anos de idade e <code>Occupation</code>, <code>Type_of_Loan</code>, e <code>Credit_Mix</code> são dados discretos.</p>
<h2 id="engenharia-das-features">Engenharia das Features</h2>
<p>Com os dados limpos, nós podemos seguir com a engenharia das features. Vamos começar com a variável <code>Type_of_Loan</code>, que possui algumas ocorrências em que em uma única célula possui diversos tipos de empréstimos, como você pode ver:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>Not Specified, Mortgage Loan, Auto Loan, and Payday Loan                                                                                         8
</span></span><span style="display:flex;"><span>Payday Loan, Mortgage Loan, Debt Consolidation Loan, and Student Loan                                                                            8
</span></span><span style="display:flex;"><span>Debt Consolidation Loan, Auto Loan, Personal Loan, Debt Consolidation Loan, Student Loan, and Credit-Builder Loan                                8
</span></span><span style="display:flex;"><span>Student Loan, Auto Loan, Student Loan, Credit-Builder Loan, Home Equity Loan, Debt Consolidation Loan, and Debt Consolidation Loan               8
</span></span><span style="display:flex;"><span>Personal Loan, Auto Loan, Mortgage Loan, Student Loan, and Student Loan                                                                          8
</span></span><span style="display:flex;"><span>Name: Type_of_Loan, Length: 5380, dtype: int64
</span></span></code></pre></div><p>Então eu vou salvar todos os tipos de empréstimos diferentes em um vetor, separando todos os empréstimos sempre que surgir uma <code>,</code> ou <code>, and</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>loan_types <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> index <span style="color:#f92672">in</span> df<span style="color:#f92672">.</span>index:
</span></span><span style="display:flex;"><span>    temp <span style="color:#f92672">=</span> df<span style="color:#f92672">.</span>Type_of_Loan[index]<span style="color:#f92672">.</span>replace(<span style="color:#e6db74">&#39;and &#39;</span>, <span style="color:#e6db74">&#39;&#39;</span>)<span style="color:#f92672">.</span>split(<span style="color:#e6db74">&#39;, &#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> temp: <span style="color:#75715e">#loan in temp array</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> i <span style="color:#f92672">not</span> <span style="color:#f92672">in</span> loan_types: <span style="color:#75715e">#if loan is not in loan_types</span>
</span></span><span style="display:flex;"><span>            loan_types<span style="color:#f92672">.</span>append(i) <span style="color:#75715e">#add it</span>
</span></span></code></pre></div><p>Agora podemos criar variáveis dummies usando <code>loan_types</code>, assim um cliente recebe o número 1 se ele tiver esse empréstimo ou 0 caso não tenha.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#66d9ef">for</span> loan <span style="color:#f92672">in</span> loan_types:
</span></span><span style="display:flex;"><span>    df[loan] <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span> <span style="color:#75715e">#create the loan column in the df with 0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> index <span style="color:#f92672">in</span> df<span style="color:#f92672">.</span>index:
</span></span><span style="display:flex;"><span>        temp <span style="color:#f92672">=</span> df<span style="color:#f92672">.</span>Type_of_Loan[index]<span style="color:#f92672">.</span>replace(<span style="color:#e6db74">&#39;and &#39;</span>, <span style="color:#e6db74">&#39;&#39;</span>)<span style="color:#f92672">.</span>split(<span style="color:#e6db74">&#39;, &#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> loan <span style="color:#f92672">in</span> temp:
</span></span><span style="display:flex;"><span>            df<span style="color:#f92672">.</span>loc[index, loan] <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>
</span></span></code></pre></div><p>Agora eu continuo trabalhando nesse banco para o tornar pronto para o treinamento de um modelo de aprendizado de máquina. Para isso, eu preciso transformar todos os meus dados discretos em numéricos.</p>
<p>A variável <code>Credit_History_Age</code> tem os valores como strings &ldquo;22 Years and 5 Months&rdquo; e esse padrão se repete, então podemos aproveitar isso e selecionar o ano multiplicado por 12 e somar o mês, resultando em um novo recurso com o crédito idade da história em meses. Quando acabarmos com isso ainda haverá valores nulos e, para preenchê-los, escolho interpolar os valores. Isso funciona muito bem quando o valor ausente é de fevereiro até julho porque interpola com a idade do histórico de crédito do cliente, mas torna-se uma suposição incorreta quando o valor ausente é em janeiro ou agosto.</p>
<p>Os nomes dos meses serão substituidos pelo seu representante numérico, logo janeiro será 1, fevereiro será 2, e assim por diante. <code>credit_mix</code> e <code>credit_score</code> possuem 3 categorias sequenciais, eu escolhi usar -1, 0, e 1, mas você também pode usar 1, 2, 3 e irá produzir o mesmo resultado.</p>
<p>Não se esqueça de checar o <a href="https://github.com/devmedeiros/credit-score-classification-app/tree/main/">repositório</a> no GitHub caso queira ver o código completo mencionado aqui e para baixar a base tratada.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Data Science Challenge - Churn Rate</title>
      <link>https://devmedeiros.com/pt/post/2022-05-30-churn-rate-challenge/</link>
      <pubDate>Mon, 30 May 2022 16:49:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/2022-05-30-churn-rate-challenge/</guid>
      <description>Alura fez um desafio de quatro semanas &amp;ldquo;Data Science Challenge&amp;rdquo; utilizando um banco desbalanceado da taxa de evasão da empresa Alura Voz</description>
      <content:encoded><![CDATA[<p>Eu fui desafiada a tomar o papel da nova cientista de dados na Alura Voz. Essa empresa fictícia é do ramo de telecomunicação e precisa reduzir sua taxa de evasão de clientes.</p>
<p>Esse desafio é dividido em quatro semanas. Para a primeira semana o objetivo é tratar o banco de dados proveniente de uma API. Em seguida, precisamos identificar clientes que são mais propensos a deixar a empresa, usando exploração e análise de dados. E então, na terceira semana, nós usamos modelos de <em>machine learning</em> para prever a taxa de evasão da Alura Voz. A última semana é para expor o que fizemos durante o desafio e construir nosso portfolio. Caso esteja interessado em ver o código, ele está disponível no meu <a href="https://github.com/devmedeiros/Challenge-Data-Science">repositório</a> do GitHub.</p>
<h2 id="primeira-semana">Primeira Semana</h2>
<h3 id="lendo-o-banco-de-dados">Lendo o Banco de Dados</h3>
<p>O banco de dados foi disponibilizado no formato JSON e num primeiro momento aparenta ser um <em>data frame</em> normal.</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/Challenge-Data-Science/main/1%20-%20Data%20Cleaning/table_head.png#center" alt="table head with the first five rows"  />
</p>
<p>Entretanto, como pode ser observado, <code>customer</code>, <code>phone</code>, <code>internet</code>, e <code>account</code> são suas próprias tabelas. Então eu normalizei elas separadamente e depois simplesmente concatenei todas essas tabelas em uma.</p>
<h3 id="dados-faltantes">Dados Faltantes</h3>
<p>A primeira vez que eu procurei por dados faltantes nessa base nenhum foi encontrado, mas a medida que eu explorei os dados eu percebi que havia espaços em branco e vazios não sendo contados como <code>NaN</code>. Então eu corrigi isso e descobri que havia 224 dados faltantes para a variável <code>Churn</code> e 11 para <code>Charges.Total</code>.</p>
<p>Eu decidi desconsiderar os dados faltantes da variável <code>Churn</code>, pois este será nosso objeto de estudo e não há sentido em estudar algo que não existe. No caso dos dados faltantes de <code>Charges.Total</code>, eu imagino que representa um cliente que não pagou nada ainda, pois todos eles possuem 0 meses de contrato, ou seja, eles acabaram de se tornar clientes, então eu simplesmente substitui o valor faltante por 0.</p>
<h3 id="codificação-de-variáveis">Codificação de Variáveis</h3>
<p>A variável <code>SeniorCitizen</code> foi a única que veio com <code>0</code> e <code>1</code> ao invés de <code>Yes</code> e <code>No</code>. Por hora eu irei trocar esses valores por &ldquo;yes&rdquo; e &ldquo;no&rdquo;, pois isto torna a análise mais simples de ser lida.</p>
<p><code>Charges.Monthly</code> e <code>Charges.Total</code> foram renomeadas para perderem o ponto, pois isto atrapalha na hora de lidar com elas no <em>python</em>.</p>
<h2 id="segunda-semana">Segunda Semana</h2>
<h3 id="análise-de-dados">Análise de Dados</h3>
<p>No primeiro gráfico podemos ver o quão desbalanceado nosso banco de dados é. Há mais de 5000 clientes que não deixaram a empresa e um pouco menos de 2000 que deixaram.</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/Challenge-Data-Science/main/2%20-%20Data%20Analysis/churn.jpg#center" alt="bar plot with two bars, the first one is for &amp;rsquo;no&amp;rsquo; and the second is for &amp;lsquo;yes&amp;rsquo;, the first bar is over 5000 count and the second one is around 2000"  />
</p>
<p>Eu experimentei usar técnicas de sobreamostragem (<em>oversampling</em>) para lidar com esse deslanceamento, mas isto fez com que os modelos de aprendizado de máquina tivessem uma performance pior. E subamostragem (<em>undersampling</em>) não é uma opção com um banco de dados desse tamanho, então eu decidi deixar do jeito que está, e quando for hora de separar os dados de treino e teste eu irei estratificar o banco de acordo com a variável <code>Churn</code>.</p>
<p>Eu também gerei 16 gráficos para todas as variáveis discretas, para ver todos os gráficos olhe este <a href="https://github.com/devmedeiros/Challenge-Data-Science/blob/main/2%20-%20Data%20Analysis/data_analysis.ipynb">notebook</a>. O objetivo é ver se havia algum comportamento que fazia alguns cliente mais propensos a deixar a empresa. É claro que todas, exceto por <code>gender</code>, parecem ter algum papel em determinar se um cliente vai ou não deixar a empresa. Mais especificamente forma de pagamento, contratos, <em>backup online</em>, suporte técnico, e serviço de internet.</p>
<p>No gráfico de <code>tenure</code>, eu decidi fazer gráficos de distribuição dos meses de contrato do cliente, um gráfico para os cliente que não evadiram e um para os que evadiram. Podemos ver que clientes que evadiram o fizeram no início do seu tempo na empresa.</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/Challenge-Data-Science/main/2%20-%20Data%20Analysis/tenure.jpg#center" alt="there are two plots side-by-side, in the first one the title is &amp;lsquo;Churn = No&amp;rsquo; the data is along the tenure axis and is in a U shape. the second plot has the title &amp;lsquo;Churn = Yes&amp;rsquo; and starts high and drops fast along the tenure line"  />
</p>
<p>A cobrança mensal média para os cliente que não evadiram é de 61,27 unidades monetária, enquanto que clientes que evadiram pagam 74,44. Isso provavelmente é por conta do tipo de contrato que esses tipo de clintes preferem, mas de qualquer forma é senso comum que preços altos afastam clientes.</p>
<h3 id="o-perfil-de-evasão">O Perfil de Evasão</h3>
<p><img loading="lazy" src="https://64.media.tumblr.com/tumblr_lojvnhHFH91qlh1s6o1_400.gifv#center" alt="person jumping through the window"  />
</p>
<p>Considerando tudo que eu pude observar através de gráficos e medidas, eu fiz um perfil de clientes que são mais propensos a evadir a empresa.</p>
<ul>
<li>
<p>Clientes novos são mais propensos a evadir do que clientes antigos.</p>
</li>
<li>
<p>Clientes com poucos serviços e produtos tendem a deixar a empresa. Se eles não estão presos a um contrato mais longo eles aparentam ser mais propensos a abandonar a empresa.</p>
</li>
<li>
<p>Sobre os meios de pagamentos, cliente que evadem possuem uma preferência <strong>forte</strong> por cheques eletrônicos e usualmente gastam 13,17 unidades monetárias a mais que a média de clientes que não deixaram a empresa.</p>
</li>
</ul>
<h2 id="terceira-semana">Terceira Semana</h2>
<h3 id="preparando-o-banco-de-dados">Preparando o Banco de Dados</h3>
<p>Damos início fazendo variáveis <em>dummies</em>, de forma que teremos n-1 <em>dummies</em> para n variáveis. Então fazemos uma matriz de correlação para avaliar a correlação das nossas variáveis.</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/Challenge-Data-Science/main/3%20-%20Model%20Selection/corr_matrix.jpg#center" alt="correlation matrix with all the features"  />
</p>
<p>Podemos ver que a variável <code>InternetService_No</code> possui correlações altas com diversas outras variáveis, isso se dá porque as outras variáveis depende do cliente ter ou não acesso a internet. Então irei tirar essas variáveis dependentes do modelo. A mesma coisa ocorre com <code>PhoneService_Yes</code>.</p>
<p><code>tenure</code> e <code>ChargesTotal</code> também possuem uma alta correlação, mas eu testei rodar os modelos sem uma das duas ou ambas e os modelos tiveram uma performance pior e levaram mais tempo para covergirem, então eu decidi manter elas no modelo, e elas são relevantes para o problema.</p>
<p>Após retirar essas variáveis eu termino de preparar o banco de dados com uma normalização das variáveis numéricas, <code>ChargesTotal</code> e <code>tenure</code>.</p>
<h3 id="banco-de-dados-de-teste-e-treino">Banco de Dados de Teste e Treino</h3>
<p>Eu dividi o banco de dados em treino e teste, 20% para teste e o resto para treino. Eu estratifiquei os dados de acordo com a variável <code>Churn</code> e embaralhei os dados antes de separar. A mesma divisão de dados é usada em todos os modelos. Após separar os dados eu decidi fazer uma sobreamostragem (<em>oversampling</em>) dos dados de <strong>teste</strong> usando SMOTE<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, pois os dados são muito desbalanceados. O motivo de eu usar essa técnica apenas nos dados de teste é que eu não quero ter um resultado viesado, se eu sobreamostrar todo o banco de dados isso quer dizer que eu vou testar meu modelo no mesmo dado que eu o treinei, e este não é meu objetivo.</p>
<h3 id="avaliação-dos-modelos">Avaliação dos Modelos</h3>
<p>Eu vou utilizar um classificador <em>dummy</em> para ter uma base para a medida de acurácia, e eu também vou utilizar as métricas: <code>precision</code> (precisão), <code>recall</code> (recordação) and <code>f1 score</code> (medida f1)<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Apesar de que o modelo <em>dummy</em> não ter valor para essas métricas eu vou manter ele para comparar a melhora dos modelos.</p>
<h3 id="modelo-base">Modelo Base</h3>
<p>O modelo base foi feito através de um classificador <em>dummy</em>, basicamente ele diz que todos os clientes se comportam da mesma forma. Neste caso o modelo chutou que nenhum cliente iria deixar a empresa. Usando essa abordagem o modelo base obteve uma acurácia de <code>0,73456</code>.</p>
<p>A seguir todos os modelos terão a mesma semente aleatória (<em>random state</em>).</p>
<h3 id="modelo-1---florestas-aleatórias">Modelo 1 - Florestas Aleatórias</h3>
<p>Eu inicio usando uma busca no grid com validação cruzada (<em>grid search with cross-validation</em>) para encontrar os melhores parâmetros dentro de uma seleção de opções utilizando o <code>recall</code> como estratégia para avaliar a performance. O melhor modelo encontrado pela busca foi:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>RandomForestClassifier(criterion<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;entropy&#39;</span>, max_depth<span style="color:#f92672">=</span><span style="color:#ae81ff">5</span>, max_leaf_nodes<span style="color:#f92672">=</span><span style="color:#ae81ff">70</span>, random_state<span style="color:#f92672">=</span><span style="color:#ae81ff">22</span>)
</span></span></code></pre></div><p>Após ajustar o modelo, as medidas de avaliação foram:</p>
<ul>
<li>Medida Accuracy: 0,72534</li>
<li>Medida Precision: 0,48922</li>
<li>Medida Recall: 0,78877</li>
<li>Medida F1: 0,60389</li>
</ul>
<h3 id="modelo-2---classificação-de-vetores-de-suporte-linear">Modelo 2 - Classificação de Vetores de Suporte Linear</h3>
<p>Neste modelo eu usei os parâmetros padrões e aumentei o teto para o máximo de iterações para <code>900000</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>LinearSVC(max_iter<span style="color:#f92672">=</span><span style="color:#ae81ff">900000</span>, random_state<span style="color:#f92672">=</span><span style="color:#ae81ff">22</span>)
</span></span></code></pre></div><p>Após ajustar o modelo, as medidas de avaliação foram:</p>
<ul>
<li>Medida Accuracy: 0,71966</li>
<li>Medida Precision: 0,48217</li>
<li>Medida Recall: 0,75936</li>
<li>Medida F1: 0,58982</li>
</ul>
<h3 id="modelo-3---rede-neural-multicamada-perceptron">Modelo 3 - Rede Neural Multicamada Perceptron</h3>
<p>Aqui eu fixei o solucionador LBFGS, pois de acordo com a documentação do <code>scikit-learn</code> ele tem uma performance melhor em banco de dados pequenos <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>, e também fiz uma busca no grid com validação cruzada para encontrar o melhor tamanho da camada oculta. O melhor modelo foi:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>MLPClassifier(hidden_layer_sizes<span style="color:#f92672">=</span>(<span style="color:#ae81ff">1</span>,), max_iter<span style="color:#f92672">=</span><span style="color:#ae81ff">9999</span>, random_state<span style="color:#f92672">=</span><span style="color:#ae81ff">22</span>, solver<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;lbfgs&#39;</span>)
</span></span></code></pre></div><p>Após ajustar o modelo, as medidas de avaliação foram:</p>
<ul>
<li>Medida Accuracy: 0,72818</li>
<li>Medida Precision: 0,49133</li>
<li>Medida Recall: 0,68182</li>
<li>Medida F1: 0,57111</li>
</ul>
<h3 id="conclusão">Conclusão</h3>
<p>Após rodar os três modelos, todos usando o mesmo <code>random_state</code>. Eu encontrei as seguintes medidas de acurácia e melhorias no desempenho (comparado com o modelo base):</p>
<p><img loading="lazy" src="https://raw.githubusercontent.com/devmedeiros/Challenge-Data-Science/main/3%20-%20Model%20Selection/results_table.png#center" alt="results table"  />
</p>
<p>No fim, a Floresta Aleatória teve as melhores métricas. Este modelo consegue <em>recordar</em> uma grande parte dos clientes que evadem corretamente, ainda não é perfeito, mas já é um ponto de partida. A medida de <em>acurácia</em> não é tão alta como eu gostaria, mas para este problema em particular o objetivo é impedir os clientes de deixar a empresa e é melhor utilizar recursos para manter um cliente que não vai deixar a empresa do que não fazer nada.</p>
<p>No fim, eu gostei desse desafio, pois é raro eu praticar aprendizado de máquina, mas graças ao desafio eu tive a oportunidade de fazer um pequeno projeto nessa área que é tão importante e relevante. Essa foi a minha primeira vez trabalhando com redes neurais e ajuste de hiperparâmetros, e tenho certeza que na próxima vez terei resultados ainda melhores.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://imbalanced-learn.org/stable/references/generated/imblearn.over_sampling.SMOTE.html">imbalanced-learn documentation</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://towardsdatascience.com/accuracy-precision-recall-or-f1-331fb37c5cb9">Accuracy, Precision, Recall or F1? - Koo Ping Shung</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html">scikit-learn documentation</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>EDA Top 50 Livros Bestsellers da Amazon</title>
      <link>https://devmedeiros.com/pt/post/2021-12-28-amazon-top-50-books/</link>
      <pubDate>Tue, 28 Dec 2021 14:55:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/2021-12-28-amazon-top-50-books/</guid>
      <description>Análise Exploratória de Dados dos 50 livros mais bem vendidos da Amazon de 2009 - 2019</description>
      <content:encoded><![CDATA[<p>Recentemente eu terminei um curso na Alura chamado <em>Python para Data Science</em> e eu quero colocar o que eu aprendi em prática, para isso eu vou fazer uma análise descritiva nesse banco de dados <a href="https://www.kaggle.com/sootersaalu/amazon-top-50-bestselling-books-2009-2019"><strong>Amazon Top 50 Bestselling Books 2009 - 2019</strong></a>. Nele há 550 livros e eles foram categorizados como <strong>fiction</strong> (ficção) e <strong>non-fiction</strong> (não ficção) pelo Goodreads. Todo o código pode ser visto <a href="https://gist.github.com/devmedeiros/12813bebd78f7662966096e963ed0aa9">aqui</a>.</p>
<p>Eu comecei olhando as cinco primeiras observações do banco de dados.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Author</th>
<th>User Rating</th>
<th>Reviews</th>
<th>Price</th>
<th>Year</th>
<th>Genre</th>
</tr>
</thead>
<tbody>
<tr>
<td>10-Day Green Smoothie Cleanse</td>
<td>JJ Smith</td>
<td>4.7</td>
<td>17350</td>
<td>8</td>
<td>2016</td>
<td>Non Fiction</td>
</tr>
<tr>
<td>11/22/63: A Novel</td>
<td>Stephen King</td>
<td>4.6</td>
<td>2052</td>
<td>22</td>
<td>2011</td>
<td>Fiction</td>
</tr>
<tr>
<td>12 Rules for Life: An Antidote to Chaos</td>
<td>Jordan B. Peterson</td>
<td>4.7</td>
<td>18979</td>
<td>15</td>
<td>2018</td>
<td>Non Fiction</td>
</tr>
<tr>
<td>1984 (Signet Classics)</td>
<td>George Orwell</td>
<td>4.7</td>
<td>21424</td>
<td>6</td>
<td>2017</td>
<td>Fiction</td>
</tr>
<tr>
<td>5,000 Awesome Facts (About Everything!) (Natio&hellip;</td>
<td>National Geographic Kids</td>
<td>4.8</td>
<td>7665</td>
<td>12</td>
<td>2019</td>
<td>Non Fiction</td>
</tr>
</tbody>
</table>
<p>Aqui é possível ver que os dados tem o <strong>Year</strong> (ano) em que o livro estava no <em>top 50 de mais vendidos</em>, seu <strong>Price</strong> (preço), a média dos <strong>User Rating</strong> (avaliação dos usuários), total de <strong>Reviews</strong> (avaliações), <strong>Author</strong> (autor), <strong>Name</strong> (nome do livro) e por fim, <strong>Genre</strong> (gênero).</p>
<p>Não há valores nulos no banco de dados. E dos 550 livros há 248 autores diferentes, então vamos ver quais autores possuem mais livros no top 50 dos mais vendidos neste período.</p>
<table>
<thead>
<tr>
<th>Autor</th>
<th>Número de livros</th>
</tr>
</thead>
<tbody>
<tr>
<td>Jeff Kinney</td>
<td>12</td>
</tr>
<tr>
<td>Gary Chapman</td>
<td>11</td>
</tr>
<tr>
<td>Rick Riordan</td>
<td>11</td>
</tr>
<tr>
<td>Suzanne Collins</td>
<td>11</td>
</tr>
<tr>
<td>American Psychological Association</td>
<td>10</td>
</tr>
<tr>
<td>Dr. Seuss</td>
<td>9</td>
</tr>
<tr>
<td>Gallup</td>
<td>9</td>
</tr>
<tr>
<td>Rob Elliott</td>
<td>8</td>
</tr>
<tr>
<td>Stephen R. Covey</td>
<td>7</td>
</tr>
<tr>
<td>Stephenie Meyer</td>
<td>7</td>
</tr>
<tr>
<td>Dav Pilkey</td>
<td>7</td>
</tr>
<tr>
<td>Bill O&rsquo;Reilly</td>
<td>7</td>
</tr>
<tr>
<td>Eric Carle</td>
<td>7</td>
</tr>
</tbody>
</table>
<p>O autor com mais livros no top 50 foi Jeff Kinney, empatado em segundo, com 11 livros, foi Gary Chapman, Rick Riordan, e Suzanne Collins. Empatado em 9º, está Stephen R. Covey, Stephenie Meyer, Dav Pilkey, Bill O&rsquo;Reilly, e Eric Carle, com 7 livros cada.</p>
<p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/violing_ur_vmTFo02uK.jpg?updatedAt=1640708039606" alt="Gráfico de viola da avaliação dos usuários"  />
</p>
<p>Com o gráfico de violino podemos ver como está concentrado a avaliação dos usuários e como os dados são compostos de livros <em>bestsellers</em> faz sentido que a avaliação dos usuários está em sua maioria concentrada em torno de 4.5 e 4.75.</p>
<p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/boxplot_year_reviews_Pa1YGMhj2z1.jpg?updatedAt=1640708039777" alt="Boxplot da quantidade de reviews por ano"  />
</p>
<p>Esse boxplot da quantidade de avaliações por ano mostra que a variabilidade aumentou através dos anos, tendo o seu pico em 2014 e gradualmente estabilizando. Podemos ver também que nos primeiros anos, 2010 e 2011, havia mais <em>outliers</em> nos dados.</p>
<table>
<thead>
<tr>
<th>Gênero</th>
<th>Avaliação do Usuário</th>
<th>Preço</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ficção</td>
<td>4.65</td>
<td>10.85</td>
</tr>
<tr>
<td>Não Ficção</td>
<td>4.60</td>
<td>14.84</td>
</tr>
</tbody>
</table>
<p>A avaliação média do usuário por gênero parece ser semelhante, com apenas 0.05 de diferença, mas o preço já apresenta uma diferença maior, 10.85 para ficção e 14.84 para não ficção. Para termos certezas de que essas diferenças são estatisticamente significantes, eu vou utilizar o teste de Mann-Whitney.</p>
<p>A hipótese nula do teste de Mann-Whitney é de que as amostras possuem a mesma distribuição, e em ambos os casos, nós rejeitamos a hipótese nula com 95% de confiança. O p-valor para os dados do preço foi de 8.34e-08 e o p-valor para a avaliação do usuário foi de 1.495e-07.</p>
<p>Para mostrar visualmente quão diferente as suas distribuição são, podemos olhar para os seguintes gráficos.</p>
<p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/hist_price_qxT6fxEGQ.jpg?updatedAt=1640708039771" alt="Distribuição do preço dos livros por gênero"  />
</p>
<p>A distribuição para os preços de livros de ficção é fortemente inclinados para a esquerda e consistentemente diminuem a medida que o preço aumenta. Enquanto que os livros de ficção começam altos e se tornam ainda mais altos, com 120 e quase 140 ocorrências nas duas primeiras categorias, então ele rapidamente diminui.</p>
<p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/hist_ur_6YxOQ_Huz.jpg?updatedAt=1640708040024" alt="Distribuição da avaliação dos usuários por gênero"  />
</p>
<p>A distribuição para a avaliação do usuário do gênero de ficção lentamente aumenta, tendo seu pico próximo de 4.8. E a distribuição para o gênero de não ficção tem seu pico logo após 4.6.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Guia do Pacote de Python seaborn</title>
      <link>https://devmedeiros.com/pt/post/2021-11-07-seaborn-package-guide/</link>
      <pubDate>Sun, 07 Nov 2021 15:14:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/pt/post/2021-11-07-seaborn-package-guide/</guid>
      <description>Um guia simples de como fazer gráficos básicos usando o pacote seaborn do Python</description>
      <content:encoded><![CDATA[<h2 id="introdução">Introdução</h2>
<p>Eu estou aprendendo visualização de dados no Python e eu me vejo como alguém que aprende fazendo, por isso eu vou fazer alguns gráficos simples usando o pacote <code>seaborn</code> que poderão ser utilizados como referência sempre que precisar refrescar a memória.</p>
<p>Primeiramente é necessários que os pacotes estejam propriamente importados, após isso eu carrego o banco de dados <em>iris</em>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> pandas <span style="color:#66d9ef">as</span> pd
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> seaborn <span style="color:#66d9ef">as</span> sns
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> matplotlib.pyplot <span style="color:#66d9ef">as</span> plt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>url <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;https://git.io/JXciW&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>iris <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>read_csv(url)
</span></span></code></pre></div><p>Caso não esteja familiarizado com o banco de dados <em>iris</em>, veja as cinco primeiras linhas dele a seguir:</p>
<table>
<thead>
<tr>
<th>sepal_length</th>
<th>sepal_width</th>
<th>petal_length</th>
<th>petal_width</th>
<th>species</th>
</tr>
</thead>
<tbody>
<tr>
<td>5.1</td>
<td>3.5</td>
<td>1.4</td>
<td>0.2</td>
<td>setosa</td>
</tr>
<tr>
<td>4.9</td>
<td>3.0</td>
<td>1.4</td>
<td>0.2</td>
<td>setosa</td>
</tr>
<tr>
<td>4.7</td>
<td>3.2</td>
<td>1.3</td>
<td>0.2</td>
<td>setosa</td>
</tr>
<tr>
<td>4.6</td>
<td>3.1</td>
<td>1.5</td>
<td>0.2</td>
<td>setosa</td>
</tr>
<tr>
<td>5.0</td>
<td>3.6</td>
<td>1.4</td>
<td>0.2</td>
<td>setosa</td>
</tr>
</tbody>
</table>
<h2 id="gráfico-de-barras">Gráfico de barras</h2>
<p>Criar um simples gráfico de barras.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>barplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/barplot_EGCCNkum4y.jpg?updatedAt=1636308224965" alt="seaborn barplot species x petal_width"  />
</p>
<p>Fazendo um gráfico de barras horizontais.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>barplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>, data<span style="color:#f92672">=</span>iris)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/horizontal-barplot_pcHXoAQWTH.jpg?updatedAt=1636308226028" alt="seaborn barplot horizontal species x petal_width"  />
</p>
<p>Ordem das barras personalizada.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>barplot(
</span></span><span style="display:flex;"><span>    x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>,
</span></span><span style="display:flex;"><span>    y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>,
</span></span><span style="display:flex;"><span>    data<span style="color:#f92672">=</span>iris,
</span></span><span style="display:flex;"><span>    order<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;virginica&#34;</span>, <span style="color:#e6db74">&#34;setosa&#34;</span>, <span style="color:#e6db74">&#34;versicolor&#34;</span>])
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/barplot-custom-order_hUl5vUQOi.jpg?updatedAt=1636308225481" alt="seaborn barplot custom bar order"  />
</p>
<p>Acrescentar limites para as barras de erro.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>barplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris, capsize<span style="color:#f92672">=</span><span style="color:#ae81ff">.2</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/barplot-cap-error-bar_xD7fHewAZ.jpg?updatedAt=1636308225172" alt="seaborn barplot caps error"  />
</p>
<p>Gráfico de barra sem barras de erro.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>barplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris, ci<span style="color:#f92672">=</span><span style="color:#66d9ef">None</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/barplot-no-cap-error_5sf2jPDpBag.jpg?updatedAt=1636308225717" alt="barplot no error bar"  />
</p>
<h2 id="gráfico-de-dispersão">Gráfico de dispersão</h2>
<p>Um gráfico de dispersão simples.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>scatterplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_width&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/scatterplot_nj8frw1JV.jpg?updatedAt=1636308224619" alt="seaborn scatterplot"  />
</p>
<p>Acrescentando grupos no gráfico de dispersão.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>scatterplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_width&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris, hue<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/scatterplot-grouped_JHOKt9xydY.jpg?updatedAt=1636308224802" alt="seaborn scatterplot grouped"  />
</p>
<p>Acrescentando grupos e escalando os pontos de um gráfico de dispersão.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>scatterplot(
</span></span><span style="display:flex;"><span>    x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_width&#34;</span>,
</span></span><span style="display:flex;"><span>    y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>,
</span></span><span style="display:flex;"><span>    data<span style="color:#f92672">=</span>iris,
</span></span><span style="display:flex;"><span>    hue<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_length&#34;</span>,
</span></span><span style="display:flex;"><span>    size<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_length&#34;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/scatterplot-grouped-size_mZJt-TjEv.jpg?updatedAt=1636308224806" alt="seaborn scatterplot grouped size"  />
</p>
<h2 id="legenda-e-eixos">Legenda e Eixos</h2>
<p>Para mover a legenda do gráfico para fora da área de plotagem, você pode utilizar <code>bbox_to_anchor = (1,1), loc=2</code>. O gráfico a seguir possui um titulo personalizado, um novo título para o eixo x e pro eixo y.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>sns<span style="color:#f92672">.</span>scatterplot(x<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;sepal_width&#34;</span>, y<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;petal_width&#34;</span>, data<span style="color:#f92672">=</span>iris, hue<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;species&#34;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>legend(
</span></span><span style="display:flex;"><span>    title<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Species&#34;</span>,
</span></span><span style="display:flex;"><span>    bbox_to_anchor <span style="color:#f92672">=</span> (<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">1</span>),
</span></span><span style="display:flex;"><span>    loc<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>xlabel(<span style="color:#e6db74">&#34;Sepal Width&#34;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>ylabel(<span style="color:#e6db74">&#34;Petal Width&#34;</span>)
</span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>title(<span style="color:#e6db74">&#34;Sepal Width x Petal Width&#34;</span>)
</span></span></code></pre></div><p><img loading="lazy" src="https://ik.imagekit.io/devmedeiros/python_seaborn/title-axis-outside-legend__zUIAf_2427.jpg?updatedAt=1636308224813" alt="seaborn scatterplot outside legend with custom title and axis labels"  />
</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
