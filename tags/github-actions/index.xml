<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>github actions on devmedeiros</title>
    <link>https://devmedeiros.com/tags/github-actions/</link>
    <description>Recent content in github actions on devmedeiros</description>
    <image>
      <title>devmedeiros</title>
      <url>https://devmedeiros.com/cover.png</url>
      <link>https://devmedeiros.com/cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 31 May 2023 21:54:00 -0300</lastBuildDate><atom:link href="https://devmedeiros.com/tags/github-actions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use SQLite Database with Github Actions</title>
      <link>https://devmedeiros.com/post/sqlite-database-github-actions/</link>
      <pubDate>Wed, 31 May 2023 21:54:00 -0300</pubDate>
      
      <guid>https://devmedeiros.com/post/sqlite-database-github-actions/</guid>
      <description>Discover a free alternative to cloud engines for data scraping on GitHub Actions!</description>
      <content:encoded><![CDATA[<p>Recently I’ve been working with a data scrapping project that works with a small amount of data, small enough that free resources/tier from the most popular cloud engines are enough to allocate my data, but I don’t like having the risk of being billed over this personal project. To solve this I’ve been looking for a free alternative that I can share and that runs automatically with Github Actions.</p>
<p>If you want to check out the repo that contains the code discussed in this post, follow this <a href="https://github.com/devmedeiros/template-sqlite-actions">link</a>.</p>
<blockquote>
<p>I&rsquo;ll illustrate how to integrate SQLite Databases with Github Actions using Python, but if you know how to modify a file using another programming language this post is still relevant to you.</p>
</blockquote>
<h2 id="writing-your-data-generatorscrapper">Writing your Data Generator/Scrapper</h2>
<p>First, your project needs to be on a repository, in my case, I’m using Github. I wrote a Python code that scrapes a webpage and saves the data to a SQLite database, on this example I’ll illustrate this with a much simpler code.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Import libraries</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> pandas <span style="color:#66d9ef">as</span> pd
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> random
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> sqlalchemy <span style="color:#f92672">import</span> create_engine
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> datetime <span style="color:#f92672">import</span> datetime
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create random data</span>
</span></span><span style="display:flex;"><span>people <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#39;Ana&#39;</span>, <span style="color:#e6db74">&#39;Bob&#39;</span>, <span style="color:#e6db74">&#39;Charles&#39;</span>, <span style="color:#e6db74">&#39;Daiana&#39;</span>]
</span></span><span style="display:flex;"><span>values <span style="color:#f92672">=</span> [random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random(), random<span style="color:#f92672">.</span>random()]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create db connection</span>
</span></span><span style="display:flex;"><span>engine <span style="color:#f92672">=</span> create_engine(<span style="color:#e6db74">&#39;sqlite:///data.db&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Create the dataframe</span>
</span></span><span style="display:flex;"><span>data <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>DataFrame({<span style="color:#e6db74">&#39;people&#39;</span>: people, <span style="color:#e6db74">&#39;values&#39;</span>: values, <span style="color:#e6db74">&#39;load_date&#39;</span>: datetime<span style="color:#f92672">.</span>now()})
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Save the data frame</span>
</span></span><span style="display:flex;"><span>data<span style="color:#f92672">.</span>to_sql(<span style="color:#e6db74">&#39;data&#39;</span>, if_exists<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;append&#39;</span>, con<span style="color:#f92672">=</span>engine, index<span style="color:#f92672">=</span><span style="color:#66d9ef">False</span>)
</span></span></code></pre></div><h2 id="setting-the-workflow">Setting the Workflow</h2>
<p>If you run the above code multiple times on a local machine it’ll work, but you’ll notice that on Github it’ll not persist the changes, that is because you need to commit the changes. To do this you’ll need to create a workflow, on your repo create a yaml file on <code>.github/workflow</code>. This file is going to be your workflow, you can choose any name you want.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#75715e"># name your workflow</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">name</span>: <span style="color:#ae81ff">random data</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># definy the frequency it&#39;ll run</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">on</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">schedule</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">cron</span>: <span style="color:#e6db74">&#34;0 * * * *&#34;</span> <span style="color:#75715e"># hourly</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">workflow_dispatch</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">env</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">ACTIONS_ALLOW_UNSECURE_COMMANDS</span>: <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># create the jobs</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">jobs</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">generate-latest</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">runs-on</span>: <span style="color:#ae81ff">ubuntu-latest</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">steps</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Checkout repo</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/checkout@v3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Set up Python</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/setup-python@v4</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">python-version</span>: <span style="color:#e6db74">&#39;3.10&#39;</span> <span style="color:#75715e"># setting python version to 3.10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Install requirements</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">pip3 install -r requirements.txt</span> <span style="color:#75715e"># setting the environment</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Run random data</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">python main.py</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Commit changes</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: |<span style="color:#e6db74">
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git config --global user.name &#34;github-actions&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git config --global user.email &#34;action@github.com&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git add -A
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">          git commit -m &#34;add more data&#34;</span>          
</span></span><span style="display:flex;"><span>      
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Push changes</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">ad-m/github-push-action@master</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">github_token</span>: <span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}</span>
</span></span></code></pre></div><p>Don&rsquo;t forget to enable workflow permissions, on your repo go to <code>Settings &gt; Actions &gt; General</code>, and select <strong>Read and write permissions</strong>.</p>
<p><img loading="lazy" src="https://i.imgur.com/pOym60i.png#center" alt="workflow permissions from github official website"  />
</p>
<h2 id="conclusion">Conclusion</h2>
<p>This can be a good free alternative in case you want to be able to share the data you are scrapping or generating. But you still need to keep an eye on Github&rsquo;s limitations when using the free version. See the current usage limits on their <a href="https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#usage-limits">official website</a>.</p>
<hr>
<p>If you would like to see a real-like application of this you can go to <a href="https://github.com/devmedeiros/nota-fiscal-goiana">this repo</a>. Where I&rsquo;ve implemented a monthly scrapper that saves the data to an SQLite database that is available to everyone.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
